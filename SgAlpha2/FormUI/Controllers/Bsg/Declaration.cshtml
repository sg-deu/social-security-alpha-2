@inherits WebViewPage<DeclarationModel>
@{
    ViewBag.Title = "Best Start Grant - Declaration";
}

<div class="grid"><!--
    --><div class="grid__item large--eight-twelfths">

        @Html.BackLink(Model.PreviousAction)

        <h1>Declaration</h1>

        @using (var form = Html.FormFor(Model.Declaration))
        {
            @form.Html.ValidationSummary()

            <h2>Review your answers below:</h2>

            if (Model.ApplicantDetails != null)
            {
                <h3>About You</h3>
                <dl>
                    @Html.AnswerFor(m => m.ApplicantDetails.Title)
                    @Html.AnswerFor(m => m.ApplicantDetails.FirstName)
                    @Html.AnswerFor(m => m.ApplicantDetails.OtherNames)
                    @Html.AnswerFor(m => m.ApplicantDetails.SurnameOrFamilyName)
                    @Html.AnswerFor(m => m.ApplicantDetails.DateOfBirth)
                    @Html.AnswerFor(m => m.ApplicantDetails.PreviouslyLookedAfter)
                    @Html.AnswerFor(m => m.ApplicantDetails.FullTimeEducation)
                    @Html.AnswerFor(m => m.ApplicantDetails.NationalInsuranceNumber)
                    @Html.AnswerFor(m => m.ApplicantDetails.CurrentAddress.Line1)
                    @Html.AnswerFor(m => m.ApplicantDetails.CurrentAddress.Line2)
                    @Html.AnswerFor(m => m.ApplicantDetails.CurrentAddress.Line3)
                    @Html.AnswerFor(m => m.ApplicantDetails.CurrentAddress.Postcode)
                    @Html.AnswerFor(m => m.ApplicantDetails.EmailAddress)
                    @Html.AnswerFor(m => m.ApplicantDetails.PhoneNumer)
                    @Html.AnswerFor(m => m.ApplicantDetails.MobilePhoneNumber)
                </dl>
            }

            if (Model.ExpectedChildren != null)
            {
                <h3>If a baby is expected</h3>
                <dl>
                    @Html.AnswerFor(m => m.ExpectedChildren.IsBabyExpected)
                    @Html.AnswerFor(m => m.ExpectedChildren.ExpectancyDate)
                    @Html.AnswerFor(m => m.ExpectedChildren.IsMoreThan1BabyExpected)
                    @Html.AnswerFor(m => m.ExpectedChildren.ExpectedBabyCount)
                </dl>
            }

            if (Model.ExistingChildren != null)
            {
                <h3>Children in the household</h3>
                <dl>
                    @Html.AnswerFor(m => m.ExistingChildren.AnyExistingChildren)
                    @for (var i = 0; i < Model.ExistingChildren.Children.Count; i++)
                    {
                        <dt>Child @(i + 1)</dt>
                        @Html.AnswerFor(m => m.ExistingChildren.Children[i].FirstName)
                        @Html.AnswerFor(m => m.ExistingChildren.Children[i].Surname)
                        @Html.AnswerFor(m => m.ExistingChildren.Children[i].DateOfBirth)
                        @Html.AnswerFor(m => m.ExistingChildren.Children[i].Relationship)
                        @Html.AnswerFor(m => m.ExistingChildren.Children[i].ChildBenefit)
                        @Html.AnswerFor(m => m.ExistingChildren.Children[i].NoChildBenefitReason)
                    }
                </dl>
            }

            if (Model.ApplicantBenefits != null)
            {
                <h3>Your benefits</h3>
                <dl>
                    @Html.AnswerFor(m => m.ApplicantBenefits.HasIncomeSupport)
                    @Html.AnswerFor(m => m.ApplicantBenefits.HasIncomeBasedJobseekersAllowance)
                    @Html.AnswerFor(m => m.ApplicantBenefits.HasIncomeRelatedEmplymentAndSupportAllowance)
                    @Html.AnswerFor(m => m.ApplicantBenefits.HasUniversalCredit)
                    @Html.AnswerFor(m => m.ApplicantBenefits.HasChildTaxCredit)
                    @Html.AnswerFor(m => m.ApplicantBenefits.HasWorkingTextCredit)
                    @Html.AnswerFor(m => m.ApplicantBenefits.HasHousingBenefit)
                    @Html.AnswerFor(m => m.ApplicantBenefits.HasPensionCredit)
                    @Html.AnswerFor(m => m.ApplicantBenefits.None)
                    @Html.AnswerFor(m => m.ApplicantBenefits.Unknown)
                </dl>
            }

            @form.Html.PartialDeclarationForGuardian(Model.RequiresGuardianDeclaration)

            @form.Html.LabelledConfirmCheckBox(m => m.AgreedToLegalStatement).Control(c => c.Emphasise(true)).Mandatory()


            @form.Html.ButtonSubmitNext(Model.IsFinalPage)

        }

        @Html.BackLink(Model.PreviousAction)

    </div><!--
--></div>